"""
Django settings for client_api project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from datetime import timedelta

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hq68cgm+0)^!b&6$(=wyz2xmv*v^@e0ag_9(zf)!0rcibh^mjp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'websocket_app',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'client_user',
    'api_user',
    'image',
    'statistics',
    'style',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'client_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'client_api.wsgi.application'
ASGI_APPLICATION = 'client_api.asgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('POSTGRES_DB', 'client_db'),
        'USER': os.environ.get('POSTGRES_USER', 'client_user'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD', 'client_password'),
        'HOST': os.environ.get('POSTGRES_HOST', '0.0.0.0'),
        'PORT': os.environ.get('POSTGRES_PORT', '5433'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
}

# Config for image transform API
ML_API_HOST = os.environ.get('ML_API_HOST', '127.0.0.1')
ML_API_PORT = os.environ.get('ML_API_PORT', '8000')
ML_API_KEY = os.environ.get('ML_API_KEY', '5GR1BA6yTlqpKtYyDpDDJfrnH5NDLsvkIg0lSGZhzbc')
ML_API_USER = os.environ.get('ML_API_USER', 'Borovyorest@gmail.com')
ML_API_PASSWORD = os.environ.get('ML_API_PASSWORD')

REDIS = {
    'host': os.environ.get('REDIS_HOST', 'localhost'),
    'port': os.environ.get('REDIS_PORT', 6379),
    'db': os.environ.get('REDIS_DB', 0),
    'password': os.environ.get('REDIS_PASSWORD'),
}

SOCKET_IO_MANAGER = f'redis://{REDIS["host"]}:{REDIS["port"]}/{REDIS["db"]}'

CELERY_BROKER_TRANSPORT = 'redis'
CELERY_BROKER_HOST = REDIS['host']  # Maps to redis host.
CELERY_BROKER_PORT = REDIS['port']  # Maps to redis port.
CELERY_BROKER_VHOST = REDIS['db']  # Maps to database number.
CELERY_IGNORE_RESULT = True
CELERY_ENABLE_UTC = False
CELERY_TIMEZONE = 'Europe/Kiev'

# Celery tasks settings
ACCESS_TOKEN_UPDATE_PERIOD = {
    'minute': '0',
    'hour': '4',
    'day_of_week': '1',
}
